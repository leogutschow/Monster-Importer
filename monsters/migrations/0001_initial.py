# Generated by Django 4.0.6 on 2022-11-21 17:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import monsters.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentications', '0002_notification_send_at'),
        ('spells', '0004_alter_dndspells_materials_needed'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractSystemMonster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('hp', models.IntegerField()),
                ('movement', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('game', models.CharField(choices=[('DND5E', 'Dungeons and Dragons 5e'), ('TOR20', 'Tormenta20'), ('PAF1e', 'Pathfinder 1e'), ('CoC7e', 'Call of Cthulhu 7e')], default='', max_length=5)),
                ('home_brew', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name=django.utils.timezone.now)),
                ('times_downloaded', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(default='images/monsters/DnD5e', upload_to=monsters.models.image_upload_path)),
                ('description', models.TextField(default='Placeholder')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentications.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Tor20BaseAttackAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_name', models.CharField(default='', max_length=100)),
                ('action_description', models.TextField(blank=True, default='', null=True)),
                ('attack', models.PositiveIntegerField(blank=True, null=True)),
                ('hit', models.CharField(blank=True, max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseSheet',
            fields=[
                ('abstractsystemmonster_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='monsters.abstractsystemmonster')),
                ('race', models.CharField(blank=True, max_length=30, null=True)),
                ('size', models.CharField(max_length=30)),
                ('challenge', models.CharField(default='0', max_length=3)),
                ('ac', models.IntegerField()),
                ('ac_type', models.CharField(max_length=50)),
                ('hp_dices', models.CharField(max_length=255)),
                ('strength', models.IntegerField()),
                ('dexterity', models.IntegerField()),
                ('constitution', models.IntegerField()),
                ('intelligence', models.IntegerField()),
                ('wisdom', models.IntegerField()),
                ('charisma', models.IntegerField()),
            ],
            bases=('monsters.abstractsystemmonster',),
        ),
        migrations.CreateModel(
            name='CoCMonster',
            fields=[
                ('abstractsystemmonster_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='monsters.abstractsystemmonster')),
                ('strength', models.IntegerField(blank=True, null=True, verbose_name='STR')),
                ('str_roll', models.CharField(blank=True, max_length=50, null=True)),
                ('constitution', models.IntegerField(blank=True, null=True, verbose_name='CON')),
                ('con_roll', models.CharField(blank=True, max_length=50, null=True)),
                ('size', models.IntegerField(blank=True, null=True, verbose_name='SIZ')),
                ('siz_roll', models.CharField(blank=True, max_length=50, null=True)),
                ('dexterity', models.IntegerField(blank=True, null=True, verbose_name='DEX')),
                ('dex_roll', models.CharField(blank=True, max_length=50, null=True)),
                ('appearance', models.IntegerField(blank=True, null=True, verbose_name='APP')),
                ('app_roll', models.CharField(blank=True, max_length=50, null=True)),
                ('intelligence', models.IntegerField(blank=True, null=True, verbose_name='INT')),
                ('int_roll', models.CharField(blank=True, max_length=50, null=True)),
                ('power', models.IntegerField(blank=True, null=True, verbose_name='POW')),
                ('pow_roll', models.CharField(blank=True, max_length=50, null=True)),
                ('education', models.IntegerField(blank=True, null=True, verbose_name='EDU')),
                ('edu_roll', models.CharField(blank=True, max_length=50, null=True)),
                ('build', models.IntegerField(blank=True, null=True)),
                ('damage_bonus', models.CharField(blank=True, max_length=255, null=True)),
                ('magic_points', models.IntegerField(blank=True, null=True)),
                ('armor', models.CharField(blank=True, max_length=255, null=True)),
                ('sanity_loss', models.CharField(blank=True, max_length=255, null=True)),
                ('attacks_per_round', models.CharField(blank=True, default='1D8', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'CoC Monster',
                'verbose_name_plural': 'CoC Monsters',
            },
            bases=('monsters.abstractsystemmonster',),
        ),
        migrations.CreateModel(
            name='Tor20MeleeAction',
            fields=[
                ('tor20baseattackaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='monsters.tor20baseattackaction')),
            ],
            options={
                'verbose_name': 'Melee Action',
            },
            bases=('monsters.tor20baseattackaction',),
        ),
        migrations.CreateModel(
            name='Tor20RangedAction',
            fields=[
                ('tor20baseattackaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='monsters.tor20baseattackaction')),
            ],
            options={
                'verbose_name': 'Ranged Action',
            },
            bases=('monsters.tor20baseattackaction',),
        ),
        migrations.CreateModel(
            name='DnDMonster',
            fields=[
                ('basesheet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='monsters.basesheet')),
                ('languages', models.CharField(default='None', max_length=100)),
                ('alignment', models.CharField(default='Neutral', max_length=30)),
                ('senses', models.CharField(blank=True, max_length=100, null=True)),
                ('damage_resistances', models.CharField(blank=True, max_length=255, null=True)),
                ('damage_immunities', models.CharField(blank=True, max_length=255, null=True)),
                ('condition_immunities', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'DnD Monster',
            },
            bases=('monsters.basesheet',),
        ),
        migrations.CreateModel(
            name='PathFinderMonster',
            fields=[
                ('basesheet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='monsters.basesheet')),
                ('monster_class', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('monster_alignment', models.CharField(choices=[('LG', 'Lawful Good'), ('LN', 'Lawful Neutral'), ('LE', 'Lawful Evil'), ('NG', 'Neutral Good'), ('N', 'Neutral'), ('CN', 'Chaotic Neutral'), ('CG', 'Chaotic Good'), ('CN', 'Chaotic Neutral'), ('CE', 'Chaotic Evil')], default='N', max_length=100)),
                ('subtype', models.CharField(blank=True, max_length=255, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('senses', models.CharField(blank=True, max_length=255, null=True)),
                ('aura', models.CharField(blank=True, max_length=255, null=True)),
                ('ac_mod', models.CharField(blank=True, max_length=255, null=True)),
                ('hp_mod', models.CharField(blank=True, max_length=255, null=True)),
                ('fortitude', models.IntegerField(blank=True, null=True)),
                ('reflex', models.IntegerField(blank=True, null=True)),
                ('will', models.IntegerField(blank=True, null=True)),
                ('save_mods', models.CharField(blank=True, max_length=255, null=True)),
                ('damage_reduction', models.CharField(blank=True, max_length=50, null=True)),
                ('immune', models.CharField(blank=True, max_length=255, null=True)),
                ('resist', models.CharField(blank=True, max_length=255, null=True)),
                ('spell_resistence', models.PositiveIntegerField(blank=True, null=True)),
                ('weaknesses', models.CharField(blank=True, max_length=50, null=True)),
                ('feats', models.TextField(blank=True, default='', null=True)),
                ('speed_mod', models.CharField(blank=True, max_length=50, null=True)),
                ('space', models.CharField(blank=True, max_length=10, null=True)),
                ('reach', models.CharField(blank=True, max_length=20, null=True)),
                ('spell_domain', models.CharField(blank=True, max_length=100, null=True)),
                ('base_attack', models.PositiveIntegerField(blank=True, null=True)),
                ('combat_maneuver_bonus', models.CharField(blank=True, max_length=50, null=True, verbose_name='CMB')),
                ('combat_maneuver_defence', models.CharField(blank=True, max_length=50, null=True, verbose_name='CMD')),
                ('languages', models.CharField(blank=True, max_length=255, null=True)),
                ('special_qualities', models.TextField(blank=True, null=True)),
                ('environment', models.CharField(blank=True, max_length=100, null=True)),
                ('organization', models.TextField(blank=True, null=True)),
                ('treasure', models.CharField(blank=True, max_length=200, null=True)),
            ],
            bases=('monsters.basesheet',),
        ),
        migrations.CreateModel(
            name='Tor20Monster',
            fields=[
                ('basesheet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='monsters.basesheet')),
                ('fortitude', models.PositiveIntegerField(default=0)),
                ('reflex', models.PositiveIntegerField(default=0)),
                ('will', models.PositiveIntegerField(default=0)),
                ('level', models.PositiveIntegerField(default=0)),
                ('mana', models.PositiveIntegerField(default=0)),
                ('equipment', models.CharField(default='None', max_length=200)),
                ('treasure', models.CharField(default='None', max_length=200)),
            ],
            bases=('monsters.basesheet',),
        ),
        migrations.CreateModel(
            name='CoCSpecialPowers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('special_name', models.CharField(max_length=50)),
                ('special_description', models.TextField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.cocmonster')),
            ],
        ),
        migrations.CreateModel(
            name='CoCSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(choices=[('Accounting', 'Accounting'), ('Acting', 'Acting'), ('Animal Handling', 'Animal Handling'), ('Anthropology', 'Anthropology'), ('Appraise', 'Appraise'), ('Archeology', 'Archeology'), ('Art and Craft', 'Art and Craft'), ('Artillery', 'Artillery'), ('Astronomy', 'Astronomy'), ('Axe', 'Axe'), ('Biology', 'Biology'), ('Botany', 'Botany'), ('Bow', 'Bow'), ('Brawl', 'Brawl'), ('Chainsaw', 'Chainsaw'), ('Charm', 'Charm'), ('Chemistry', 'Chemistry'), ('Climb', 'Climb'), ('Computer Use', 'Computer'), ('Credit Rating', 'Credit'), ('Cryptography', 'Cryptography'), ('Cthulhu Mythos', 'Cthulhu Mythos'), ('Demolitions', 'Demolitions'), ('Disguise', 'Disguise'), ('Diving', 'Diving'), ('Dodge', 'Dodge'), ('Drive Auto', 'Drive Auto'), ('Electrical Repair', 'Electrical Repair'), ('Electronics', 'Electronics'), ('Fast Talk', 'Fast Talk'), ('Fighting', 'Fighting'), ('Fine Art', 'Fine Art'), ('Firearms', 'Firearms'), ('First Aid', 'First Aid'), ('Flail', 'Flail'), ('Flamethrower', 'Flamethrower'), ('Forensics', 'Forensics'), ('Forgery', 'Forgery'), ('Garrote', 'Garrote'), ('Geology', 'Geology'), ('Handgun', 'Handgun'), ('Heavy Weapons', 'Heavy Weapons'), ('History', 'History'), ('Hypnosis', 'Hypnosis'), ('Intimidate', 'Intimidate'), ('Jump', 'Jump'), ('Language (Other)', 'Language (Other)'), ('Language (Own)', 'Language (Own)'), ('Law', 'Law'), ('Library Use', 'Library Use'), ('Listen', 'Listen'), ('Locksmith', 'Locksmith'), ('Machine Gun', 'Machine Gun'), ('Mathematics', 'Mathematics'), ('Mechanical Repair', 'Mechanical Repair'), ('Medicine', 'Medicine'), ('Meteorology', 'Meteorology'), ('Natural World', 'Natural World'), ('Navigate', 'Navigate'), ('Occult', 'Occult'), ('Operate Heavy Machinery', 'Operate Heavy Machinery'), ('Persuade', 'Persuade'), ('Pharmacy', 'Pharmacy'), ('Photography', 'Photography'), ('Physics', 'Physics'), ('Pilot', 'Pilot'), ('Psychoanalysis', 'Psychoanalysis'), ('Psychology', 'Psychology'), ('Read Lips', 'Read Lips'), ('Ride', 'Ride'), ('Rifle', 'Rifle'), ('Science', 'Science'), ('Shotgun', 'Shotgun'), ('Sleight of Hand', 'Sleight of Hand'), ('Spear', 'Spear'), ('Spot Hidden', 'Spot Hidden'), ('Stealth', 'Stealth'), ('Submachine Gun', 'Submachine Gun'), ('Survival', 'Survival'), ('Sword', 'Sword'), ('Swim', 'Swim'), ('Throw', 'Throw'), ('Track', 'Track'), ('Whip', 'Whip'), ('Zoology', 'Zoology')], max_length=50)),
                ('percentage', models.PositiveIntegerField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.cocmonster')),
            ],
        ),
        migrations.CreateModel(
            name='CoCMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attack_name', models.CharField(max_length=255)),
                ('attack_description', models.TextField()),
                ('damage', models.CharField(blank=True, max_length=255, null=True)),
                ('percentage', models.IntegerField()),
                ('percentage_raw', models.CharField(blank=True, max_length=100, null=True)),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.cocmonster')),
            ],
        ),
        migrations.CreateModel(
            name='Tor20Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(choices=[('Acrobatics', 'Acrobatics'), ('Taming', 'Taming'), ('Athletics', 'Athletics'), ('Performance', 'Performance'), ('Riding', 'Riding'), ('Knowledge', 'Knowledge'), ('Healing', 'Healing'), ('Diplomacy', 'Diplomacy'), ('Deception', 'Deception'), ('Fortitude', 'Fortitude'), ('Stealth', 'Stealth'), ('War', 'War'), ('Initiative', 'Initiative'), ('Intimidation', 'Intimidation'), ('Intuition', 'Intuition'), ('Investigation', 'Investigation'), ('Gambling', 'Gambling'), ('Sleight of Hand', 'Sleight of Hand'), ('Fight', 'Fight'), ('Mistic Arts', 'Mistic Arts'), ('Nobility', 'Nobility'), ('Diligent', 'Diligent'), ('Perception', 'Perception'), ('Pilotage', 'Pilotage'), ('Aiming', 'Aiming'), ('Reflexes', 'Reflexes'), ('Religion', 'Religion'), ('Survival', 'Survival'), ('Will', 'Will')], default='', max_length=15)),
                ('skill_bonus', models.PositiveIntegerField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.tor20monster')),
            ],
        ),
        migrations.CreateModel(
            name='Tor20GenericAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_name', models.CharField(max_length=100)),
                ('action_description', models.TextField(blank=True, default='', null=True)),
                ('action_type', models.CharField(blank=True, choices=[('SRD', 'Standard'), ('MOV', 'Movement'), ('COM', 'Complete'), ('FRE', 'Free'), ('REA', 'Reaction')], default='SRD', max_length=3, null=True)),
                ('mana_cost', models.PositiveIntegerField(blank=True, null=True)),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.tor20monster')),
            ],
            options={
                'verbose_name': 'Generic Action',
            },
        ),
        migrations.AddField(
            model_name='tor20baseattackaction',
            name='monster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.tor20monster'),
        ),
        migrations.CreateModel(
            name='PathFinderSpecialAbility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.pathfindermonster')),
            ],
        ),
        migrations.CreateModel(
            name='PathFinderSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(choices=[('Acrobatics', 'Acrobatics'), ('Appraise', 'Appraise'), ('Bluff', 'Bluff'), ('Climb', 'Climb'), ('Craft', 'Craft'), ('Diplomacy', 'Diplomacy'), ('Disable Device', 'Disable Device'), ('Disguise', 'Disguise'), ('Escape Artist', 'Escape Artist'), ('Fly', 'Fly'), ('Handle Animal', 'Handle Animal'), ('Heal', 'Heal'), ('Intimidate', 'Intimidate'), ('Knowledge (arcana)', 'Knowledge (arcana)'), ('Knowledge (dungeoneering)', 'Knowledge (dungeoneering)'), ('Knowledge (engineering)', 'Knowledge (engineering)'), ('Knowledge (geography)', 'Knowledge (geography)'), ('Knowledge (history)', 'Knowledge (history)'), ('Knowledge (local)', 'Knowledge (local)'), ('Knowledge (nature)', 'Knowledge (nature)'), ('Knowledge (nobility)', 'Knowledge (nobility)'), ('Knowledge (planes)', 'Knowledge (planes)'), ('Knowledge (religion)', 'Knowledge (religion)'), ('Knowledge (any one)', 'Knowledge (any one)'), ('Linguistics', 'Linguistics'), ('Perception', 'Perception'), ('Perform', 'Perform'), ('Profession', 'Profession'), ('Ride', 'Ride'), ('Sense Motive', 'Sense Motive'), ('Sleight of Hand', 'Sleight of Hand'), ('Spellcraft', 'Spellcraft'), ('Stealth', 'Stealth'), ('Survival', 'Heal'), ('Swim', 'Swim'), ('Use Magic Device', 'Use Magic Device')], max_length=30)),
                ('skill_bonus', models.IntegerField()),
                ('racial_mod', models.BooleanField(default=False)),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.pathfindermonster')),
            ],
        ),
        migrations.CreateModel(
            name='PathFinderOffense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('M', 'Melee'), ('R', 'Ranged')], max_length=1)),
                ('attack', models.CharField(blank=True, max_length=255, null=True)),
                ('effect', models.CharField(blank=True, max_length=255, null=True)),
                ('crit_range', models.CharField(blank=True, max_length=20, null=True)),
                ('multiple', models.BooleanField(default=False)),
                ('damage', models.CharField(blank=True, max_length=20, null=True)),
                ('count', models.IntegerField(blank=True, default=1, null=True)),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.pathfindermonster')),
            ],
        ),
        migrations.CreateModel(
            name='DnDSpecialTraits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialtrait_name', models.CharField(max_length=50)),
                ('specialtrait_description', models.TextField()),
                ('spellcasting', models.BooleanField(default=False)),
                ('caster_level', models.PositiveIntegerField(blank=True, null=True)),
                ('spellcasting_ability', models.CharField(blank=True, choices=[('STR', 'Strength'), ('DEX', 'Dexterity'), ('CON', 'Constitution'), ('INT', 'Intelligence'), ('WIS', 'Wisdom'), ('CHA', 'Charisma')], default='WIS', max_length=3, null=True)),
                ('spell_attack_mod', models.PositiveIntegerField(blank=True, null=True)),
                ('spell_dc_save', models.PositiveIntegerField(blank=True, null=True)),
                ('dnd_spells', models.ManyToManyField(blank=True, null=True, to='spells.dndspells')),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.dndmonster')),
            ],
            options={
                'verbose_name': 'DnD Special Trait',
            },
        ),
        migrations.CreateModel(
            name='DnDSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(choices=[('Athletics', 'Athletics'), ('Acrobatics', 'Acrobatics'), ('Sleight of Hand', 'Sleight of Hand'), ('Stealth', 'Stealth'), ('Arcana', 'Arcana'), ('History', 'History'), ('Investigation', 'Investigation'), ('Nature', 'Nature'), ('Religion', 'Religion'), ('Animal Handling', 'Animal Handling'), ('Insight', 'Insight'), ('Medicine', 'Medicine'), ('Perception', 'Perception'), ('Survival', 'Survival'), ('Deception', 'Deception'), ('Intimidation', 'Intimidation'), ('Performance', 'Performance'), ('Persuasion', 'Persuasion')], max_length=15)),
                ('modifier', models.PositiveIntegerField(default=1)),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.dndmonster')),
            ],
            options={
                'verbose_name': 'DnD Skill',
            },
        ),
        migrations.CreateModel(
            name='DnDSavingThrows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attr', models.CharField(choices=[('STR', 'Strength'), ('DEX', 'Dexterity'), ('CON', 'Constitution'), ('INT', 'Intelligence'), ('WIS', 'Wisdom'), ('CHA', 'Charisma')], max_length=3)),
                ('bonus', models.PositiveIntegerField()),
                ('monster', models.ForeignKey(default=4, on_delete=django.db.models.deletion.CASCADE, to='monsters.dndmonster')),
            ],
            options={
                'verbose_name': 'DnD Saving Throw',
            },
        ),
        migrations.CreateModel(
            name='DndReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_name', models.CharField(max_length=20)),
                ('reaction_description', models.TextField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.dndmonster')),
            ],
            options={
                'verbose_name': 'DnD Reaction',
            },
        ),
        migrations.CreateModel(
            name='DnDLegendaryAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legendary_name', models.CharField(max_length=50)),
                ('legendary_description', models.TextField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.dndmonster')),
            ],
        ),
        migrations.CreateModel(
            name='DnDAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_name', models.CharField(max_length=255)),
                ('action_description', models.TextField()),
                ('is_attack', models.BooleanField(default=False)),
                ('weapon_type', models.CharField(blank=True, max_length=50, null=True)),
                ('attack', models.IntegerField(blank=True, null=True)),
                ('reach', models.CharField(blank=True, max_length=50, null=True)),
                ('hit', models.IntegerField(blank=True, null=True)),
                ('hit_dice', models.CharField(blank=True, max_length=30, null=True)),
                ('damage_type', models.CharField(blank=True, max_length=50, null=True)),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monsters.dndmonster')),
            ],
            options={
                'verbose_name': 'DnD Action',
            },
        ),
    ]
